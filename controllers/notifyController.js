const dayjs = require("dayjs");
const weekday = require("dayjs/plugin/weekday");

const { sendWhapiMessage } = require("../services/whatsappApiService");
const { getAllDistributors } = require("../services/distributorService");
dayjs.extend(weekday);

function getTomorrowDay() {
  const tomorrow = dayjs().add(1, "day");
  return tomorrow.format("dddd");
}

async function notifyClients(req, res) {
  try {
    const tomorrowDay = getTomorrowDay();

    const distributors = await getAllDistributors();

    for (const distributor of distributors) {
      for (const client of distributor.clients) {
        if (
          client.distributionDayOfWeek.toLowerCase() ===
          tomorrowDay.toLowerCase()
        ) {
          const message = `ðŸ‘‹ Hola ${client.name}, te recordamos que ${distributor.name} pasarÃ¡ maÃ±ana por tu zona.ðŸšš`;
          const message2 = `ðŸ“¦ Ya puedes realizar tu pedido ingresando a nuestro catalogo\n https://wa.me/c/${distributor.phone}`;
          await Promise.all([
            await sendWhapiMessage(client.phone, message, distributor),
            await sendWhapiMessage(client.phone, message2, distributor),
          ]);
        }
      }
    }

    return res.status(200).send({ status: "messages sended correctly" });
  } catch (err) {
    console.error("Error en notifyClients:", err);
  }
}

async function notifyClientsFirstMessage(req, res) {
  const infoMessage = `Mi funciÃ³n es ayudarte a pedir mÃ¡s fÃ¡cil y rÃ¡pido:\nâœ… Escribo un dÃ­a antes de tu reparto y consulto si necesitÃ¡s mercaderÃ­a.\nâœ… Registro tu pedido.\nâœ… Te muestro nuestro catÃ¡logo actualizado con precios.`;
  const priceMessage = `ðŸ‘‰ Esta semana podÃ©s comprar con los precios viejos, aunque ya estÃ¡n cargados los nuevos que aplican desde la prÃ³xima.\nY si preferÃ­s seguir trabajando como siempre, solo avisale a Bruno por su via normal de comunicacion.`;

  const distributors = await getAllDistributors();

  for (const distributor of distributors) {
    for (const client of distributor.clients) {
      const welcomeMessage = `ðŸ‘‹ Â¡Hola! Soy DistriBot, el asistente virtual de ${distributor.name}. Hace aÃ±os te llevamos productos como Evita, Mio, El Aguante y mÃ¡s.`;

      await Promise.all([
        sendWhapiMessage(client.phone, welcomeMessage, distributor),
        sendWhapiMessage(client.phone, infoMessage, distributor),
        sendWhapiMessage(client.phone, priceMessage, distributor),
      ]);
    }
  }

  return res.status(200).send({ status: "messages sended correctly" });
}

module.exports = { notifyClients, notifyClientsFirstMessage };
